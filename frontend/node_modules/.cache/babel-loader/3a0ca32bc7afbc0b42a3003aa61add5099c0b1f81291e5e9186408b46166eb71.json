{"ast":null,"code":"const buildHighestPredictedTeam = players => {\n  // Filter and sort by predicted points\n  const goalkeepers = players.filter(p => p.element_type === 1 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const defenders = players.filter(p => p.element_type === 2 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const midfielders = players.filter(p => p.element_type === 3 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const forwards = players.filter(p => p.element_type === 4 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const managers = players.filter(p => p.element_type === 5 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n\n  // Select correct number for each position\n  const selectedGoalkeepers = goalkeepers.slice(0, 2); // 1 main, 1 bench\n  const selectedDefenders = defenders.slice(0, 5); // 3 main, 2 bench\n  const selectedMidfielders = midfielders.slice(0, 5); // 3 main, 2 bench\n  const selectedForwards = forwards.slice(0, 3); // 1 main, 2 bench\n  const selectedManagers = managers.slice(0, 2); // 1 main, 1 bench\n\n  // Build main team (manager in first slot)\n  let mainTeam = [selectedManagers[0],\n  // 1 Manager (main team, top right)\n  selectedGoalkeepers[0],\n  // 1 GK\n  ...selectedDefenders.slice(0, 3),\n  // 3 DEF\n  ...selectedMidfielders.slice(0, 3),\n  // 3 MID\n  selectedForwards[0] // 1 FWD\n  ];\n\n  // Fill up to 12 players in main team with highest ep_next from remaining DEF/MID/FWD\n  let remaining = [...selectedDefenders.slice(3),\n  // 2 DEF\n  ...selectedMidfielders.slice(3),\n  // 2 MID\n  ...selectedForwards.slice(1) // 2 FWD\n  ].sort((a, b) => b.ep_next - a.ep_next);\n  while (mainTeam.length < 12 && remaining.length) {\n    mainTeam.push(remaining.shift());\n  }\n\n  // Sort each position in mainTeam by points before returning (except manager stays first)\n  const gks = mainTeam.filter(p => p && p.element_type === 1).sort((a, b) => b.ep_next - a.ep_next);\n  const defs = mainTeam.filter(p => p && p.element_type === 2).sort((a, b) => b.ep_next - a.ep_next);\n  const mids = mainTeam.filter(p => p && p.element_type === 3).sort((a, b) => b.ep_next - a.ep_next);\n  const atts = mainTeam.filter(p => p && p.element_type === 4).sort((a, b) => b.ep_next - a.ep_next);\n  mainTeam = [selectedManagers[0],\n  // manager always first\n  ...gks, ...defs, ...mids, ...atts].filter(Boolean);\n\n  // Bench: 1 GK, rest of DEF/MID/FWD not in main team, and second highest manager\n  const benchGK = selectedGoalkeepers[1] ? [selectedGoalkeepers[1]] : [];\n  const benchOutfield = remaining.sort((a, b) => b.ep_next - a.ep_next);\n  const benchManager = selectedManagers[1] ? [selectedManagers[1]] : [];\n\n  // Sort each position in bench by points before returning\n  const benchDefs = benchOutfield.filter(p => p.element_type === 2).sort((a, b) => b.ep_next - a.ep_next);\n  const benchMids = benchOutfield.filter(p => p.element_type === 3).sort((a, b) => b.ep_next - a.ep_next);\n  const benchAtts = benchOutfield.filter(p => p.element_type === 4).sort((a, b) => b.ep_next - a.ep_next);\n  const bench = [...benchManager, ...benchGK, ...benchDefs, ...benchMids, ...benchAtts].filter(Boolean);\n  return {\n    mainTeam,\n    bench\n  };\n};","map":{"version":3,"names":["buildHighestPredictedTeam","players","goalkeepers","filter","p","element_type","ep_next","sort","a","b","defenders","midfielders","forwards","managers","selectedGoalkeepers","slice","selectedDefenders","selectedMidfielders","selectedForwards","selectedManagers","mainTeam","remaining","length","push","shift","gks","defs","mids","atts","Boolean","benchGK","benchOutfield","benchManager","benchDefs","benchMids","benchAtts","bench"],"sources":["/home/rjhall/Development/fpl-predictor/frontend/src/components/TeamFormation/TeamFormation.js"],"sourcesContent":["const buildHighestPredictedTeam = (players) => {\n  // Filter and sort by predicted points\n  const goalkeepers = players.filter((p) => p.element_type === 1 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const defenders = players.filter((p) => p.element_type === 2 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const midfielders = players.filter((p) => p.element_type === 3 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const forwards = players.filter((p) => p.element_type === 4 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n  const managers = players.filter((p) => p.element_type === 5 && p.ep_next > 0).sort((a, b) => b.ep_next - a.ep_next);\n\n  // Select correct number for each position\n  const selectedGoalkeepers = goalkeepers.slice(0, 2); // 1 main, 1 bench\n  const selectedDefenders = defenders.slice(0, 5);     // 3 main, 2 bench\n  const selectedMidfielders = midfielders.slice(0, 5); // 3 main, 2 bench\n  const selectedForwards = forwards.slice(0, 3);       // 1 main, 2 bench\n  const selectedManagers = managers.slice(0, 2);       // 1 main, 1 bench\n\n  // Build main team (manager in first slot)\n  let mainTeam = [\n    selectedManagers[0],              // 1 Manager (main team, top right)\n    selectedGoalkeepers[0],           // 1 GK\n    ...selectedDefenders.slice(0, 3), // 3 DEF\n    ...selectedMidfielders.slice(0, 3), // 3 MID\n    selectedForwards[0],              // 1 FWD\n  ];\n\n  // Fill up to 12 players in main team with highest ep_next from remaining DEF/MID/FWD\n  let remaining = [\n    ...selectedDefenders.slice(3),    // 2 DEF\n    ...selectedMidfielders.slice(3),  // 2 MID\n    ...selectedForwards.slice(1),     // 2 FWD\n  ].sort((a, b) => b.ep_next - a.ep_next);\n\n  while (mainTeam.length < 12 && remaining.length) {\n    mainTeam.push(remaining.shift());\n  }\n\n  // Sort each position in mainTeam by points before returning (except manager stays first)\n  const gks = mainTeam.filter(p => p && p.element_type === 1).sort((a, b) => b.ep_next - a.ep_next);\n  const defs = mainTeam.filter(p => p && p.element_type === 2).sort((a, b) => b.ep_next - a.ep_next);\n  const mids = mainTeam.filter(p => p && p.element_type === 3).sort((a, b) => b.ep_next - a.ep_next);\n  const atts = mainTeam.filter(p => p && p.element_type === 4).sort((a, b) => b.ep_next - a.ep_next);\n\n  mainTeam = [\n    selectedManagers[0], // manager always first\n    ...gks,\n    ...defs,\n    ...mids,\n    ...atts,\n  ].filter(Boolean);\n\n  // Bench: 1 GK, rest of DEF/MID/FWD not in main team, and second highest manager\n  const benchGK = selectedGoalkeepers[1] ? [selectedGoalkeepers[1]] : [];\n  const benchOutfield = remaining.sort((a, b) => b.ep_next - a.ep_next);\n  const benchManager = selectedManagers[1] ? [selectedManagers[1]] : [];\n\n  // Sort each position in bench by points before returning\n  const benchDefs = benchOutfield.filter(p => p.element_type === 2).sort((a, b) => b.ep_next - a.ep_next);\n  const benchMids = benchOutfield.filter(p => p.element_type === 3).sort((a, b) => b.ep_next - a.ep_next);\n  const benchAtts = benchOutfield.filter(p => p.element_type === 4).sort((a, b) => b.ep_next - a.ep_next);\n\n  const bench = [\n    ...benchManager,\n    ...benchGK,\n    ...benchDefs,\n    ...benchMids,\n    ...benchAtts,\n  ].filter(Boolean);\n\n  return { mainTeam, bench };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}