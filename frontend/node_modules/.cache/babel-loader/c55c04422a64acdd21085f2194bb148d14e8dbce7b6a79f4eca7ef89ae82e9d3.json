{"ast":null,"code":"var _jsxFileName = \"/home/rjhall/Development/fpl-predictor/frontend/src/components/NavigationBar/NavigationBar.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Box, Toolbar, Typography, Container, Button, TextField } from '@mui/material';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationBar = ({\n  entryId,\n  setEntryId,\n  handleEntryIdSubmit,\n  toggleTeamView,\n  isHighestPredictedTeam\n}) => {\n  _s();\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const handleSubmit = () => {\n    handleEntryIdSubmit();\n    setIsSubmitted(true);\n    if (!isHighestPredictedTeam) {\n      toggleTeamView(); // Automatically switch to the user's team after submission\n    }\n  };\n  const handleToggleMyTeam = () => {\n    if (isSubmitted && isHighestPredictedTeam) {\n      toggleTeamView();\n    }\n  };\n  const handleToggleHighestTeam = () => {\n    if (!isHighestPredictedTeam) {\n      toggleTeamView();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"a\",\n          href: \"#\",\n          sx: {\n            mr: 2,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            },\n            fontFamily: 'monospace',\n            fontWeight: 700,\n            letterSpacing: '.3rem',\n            color: 'inherit',\n            textDecoration: 'none'\n          },\n          children: \"LOGO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            maxWidth: '150px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: entryId,\n            onChange: e => setEntryId(e.target.value),\n            fullWidth: true,\n            className: \"text-field\",\n            inputProps: {\n              maxLength: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          sx: {\n            my: 2,\n            color: 'white',\n            display: 'block'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleToggleMyTeam,\n          sx: {\n            my: 2,\n            color: 'white',\n            display: 'block'\n          },\n          disabled: !isSubmitted || !isHighestPredictedTeam,\n          children: \"My Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleToggleHighestTeam,\n          sx: {\n            my: 2,\n            color: 'white',\n            display: 'block'\n          },\n          disabled: isHighestPredictedTeam,\n          children: \"Highest Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NavigationBar, \"y0UBtSRcKf2AGGJv1w8GuwACgkA=\");\n_c = NavigationBar;\nNavigationBar.propTypes = {\n  entryId: PropTypes.string.isRequired,\n  setEntryId: PropTypes.func.isRequired,\n  handleEntryIdSubmit: PropTypes.func.isRequired,\n  toggleTeamView: PropTypes.func.isRequired,\n  isHighestPredictedTeam: PropTypes.bool.isRequired\n};\nexport default NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["React","PropTypes","AppBar","Box","Toolbar","Typography","Container","Button","TextField","jsxDEV","_jsxDEV","NavigationBar","entryId","setEntryId","handleEntryIdSubmit","toggleTeamView","isHighestPredictedTeam","_s","isSubmitted","setIsSubmitted","useState","handleSubmit","handleToggleMyTeam","handleToggleHighestTeam","position","children","maxWidth","disableGutters","variant","noWrap","component","href","sx","mr","display","xs","md","fontFamily","fontWeight","letterSpacing","color","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","value","onChange","e","target","fullWidth","className","inputProps","maxLength","onClick","my","disabled","_c","propTypes","string","isRequired","func","bool","$RefreshReg$"],"sources":["/home/rjhall/Development/fpl-predictor/frontend/src/components/NavigationBar/NavigationBar.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  Typography,\n  Container,\n  Button,\n  TextField\n} from '@mui/material';\nimport './styles.css';\n\nconst NavigationBar = ({ entryId, setEntryId, handleEntryIdSubmit, toggleTeamView, isHighestPredictedTeam }) => {\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n\n  const handleSubmit = () => {\n    handleEntryIdSubmit();\n    setIsSubmitted(true);\n    if (!isHighestPredictedTeam) {\n      toggleTeamView(); // Automatically switch to the user's team after submission\n    }\n  };\n\n  const handleToggleMyTeam = () => {\n    if (isSubmitted && isHighestPredictedTeam) {\n      toggleTeamView();\n    }\n  };\n\n  const handleToggleHighestTeam = () => {\n    if (!isHighestPredictedTeam) {\n      toggleTeamView();\n    }\n  };\n\n  return (\n    <AppBar position='static'>\n      <Container maxWidth='xl'>\n        <Toolbar disableGutters>\n          <Typography\n            variant='h6'\n            noWrap\n            component='a'\n            href='#'\n            sx={ {\n              mr: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n            } }\n          >\n            LOGO\n          </Typography>\n          <Box sx={ { flexGrow: 1, maxWidth: '150px' } }>\n            <TextField\n              value={ entryId }\n              onChange={ (e) => setEntryId(e.target.value) }\n              fullWidth\n              className='text-field'\n              inputProps={ { maxLength: 10 } }\n            />\n          </Box>\n          <Button\n            onClick={ handleSubmit }\n            sx={ { my: 2, color: 'white', display: 'block' } }\n          >\n            Submit\n          </Button>\n          <Button\n            onClick={ handleToggleMyTeam }\n            sx={ { my: 2, color: 'white', display: 'block' } }\n            disabled={ !isSubmitted || !isHighestPredictedTeam }\n          >\n            My Team\n          </Button>\n          <Button\n            onClick={ handleToggleHighestTeam }\n            sx={ { my: 2, color: 'white', display: 'block' } }\n            disabled={ isHighestPredictedTeam }\n          >\n            Highest Team\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nNavigationBar.propTypes = {\n  entryId: PropTypes.string.isRequired,\n  setEntryId: PropTypes.func.isRequired,\n  handleEntryIdSubmit: PropTypes.func.isRequired,\n  toggleTeamView: PropTypes.func.isRequired,\n  isHighestPredictedTeam: PropTypes.bool.isRequired,\n};\n\nexport default NavigationBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}