{"ast":null,"code":"var _jsxFileName = \"/home/rjhall/Development/fpl-predictor/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Container, Snackbar, Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { useEffect, useState } from 'react';\nimport TopNavBar from './components/NavigationBar/NavigationBar';\nimport TeamFormation from './components/TeamFormation/TeamFormation';\nimport useTeamData from './hooks/useTeamData';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [entryId, setEntryId] = useState('');\n  const [submittedEntryId, setSubmittedEntryId] = useState(null);\n  const {\n    mainTeamData,\n    benchTeamData,\n    snackbarMessage,\n    handlePlayerClick,\n    calculateTotalPredictedPoints,\n    toggleTeamView,\n    isHighestPredictedTeam\n  } = useTeamData(submittedEntryId);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  useEffect(() => {\n    if (snackbarMessage) {\n      setSnackbarOpen(true);\n    }\n  }, [snackbarMessage]);\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  useEffect(() => {\n    if (snackbarOpen) {\n      const timer = setTimeout(() => {\n        setSnackbarOpen(false);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [snackbarOpen]);\n  const handleEntryIdSubmit = () => {\n    setSubmittedEntryId(entryId);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopNavBar, {\n      entryId: entryId,\n      setEntryId: setEntryId,\n      handleEntryIdSubmit: handleEntryIdSubmit,\n      toggleTeamView: toggleTeamView,\n      isHighestPredictedTeam: isHighestPredictedTeam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        marginTop: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"FPL Predictor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          align: \"center\",\n          gutterBottom: true,\n          children: [\"Total Predicted Points:\", ' ', /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: {\n              fontWeight: 'bold'\n            },\n            children: calculateTotalPredictedPoints(mainTeamData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            md: 10,\n            children: /*#__PURE__*/_jsxDEV(TeamFormation, {\n              mainTeam: mainTeamData,\n              benchTeam: benchTeamData,\n              onPlayerClick: handlePlayerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbarOpen,\n        autoHideDuration: 6000,\n        onClose: handleSnackbarClose,\n        message: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"DvCY67hvDc5/VA7v9UWKeTwGM1w=\", false, function () {\n  return [useTeamData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Box","Container","Snackbar","Typography","Grid","useEffect","useState","TopNavBar","TeamFormation","useTeamData","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","entryId","setEntryId","submittedEntryId","setSubmittedEntryId","mainTeamData","benchTeamData","snackbarMessage","handlePlayerClick","calculateTotalPredictedPoints","toggleTeamView","isHighestPredictedTeam","snackbarOpen","setSnackbarOpen","handleSnackbarClose","timer","setTimeout","clearTimeout","handleEntryIdSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","marginTop","display","flexDirection","alignItems","variant","align","gutterBottom","component","fontWeight","container","spacing","justifyContent","md","mainTeam","benchTeam","onPlayerClick","open","autoHideDuration","onClose","message","_c","$RefreshReg$"],"sources":["/home/rjhall/Development/fpl-predictor/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { Box, Container, Snackbar, Typography } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport { useEffect, useState } from 'react';\nimport TopNavBar from './components/NavigationBar/NavigationBar';\nimport TeamFormation from './components/TeamFormation/TeamFormation';\nimport useTeamData from './hooks/useTeamData';\n\nconst App = () => {\n  const [entryId, setEntryId] = useState('');\n  const [submittedEntryId, setSubmittedEntryId] = useState(null);\n\n  const {\n    mainTeamData,\n    benchTeamData,\n    snackbarMessage,\n    handlePlayerClick,\n    calculateTotalPredictedPoints,\n    toggleTeamView,\n    isHighestPredictedTeam,\n  } = useTeamData(submittedEntryId);\n\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n  useEffect(() => {\n    if (snackbarMessage) {\n      setSnackbarOpen(true);\n    }\n  }, [snackbarMessage]);\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  useEffect(() => {\n    if (snackbarOpen) {\n      const timer = setTimeout(() => {\n        setSnackbarOpen(false);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [snackbarOpen]);\n\n  const handleEntryIdSubmit = () => {\n    setSubmittedEntryId(entryId);\n  };\n\n  return (\n    <>\n      <TopNavBar\n        entryId={ entryId }\n        setEntryId={ setEntryId }\n        handleEntryIdSubmit={ handleEntryIdSubmit }\n        toggleTeamView={ toggleTeamView }\n        isHighestPredictedTeam={ isHighestPredictedTeam }\n      />\n      <Container sx={ { marginTop: '4px' } }>\n        <Box\n          sx={ {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          } }\n        >\n          <Typography variant='h4' align='center' gutterBottom>\n            FPL Predictor\n          </Typography>\n          <Typography variant='body1' align='center' gutterBottom>\n            Total Predicted Points:{ ' ' }\n            <Box component='span' sx={ { fontWeight: 'bold' } }>\n              { calculateTotalPredictedPoints(mainTeamData) }\n            </Box>\n          </Typography>\n          <Grid container spacing={ 2 } justifyContent='center'>\n            <Grid md={ 10 }>\n              <TeamFormation\n                mainTeam={ mainTeamData }\n                benchTeam={ benchTeamData }\n                onPlayerClick={ handlePlayerClick }\n              />\n            </Grid>\n          </Grid>\n        </Box>\n        <Snackbar\n          open={ snackbarOpen }\n          autoHideDuration={ 6000 }\n          onClose={ handleSnackbarClose }\n          message={ snackbarMessage }\n        />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,eAAe;AACpE,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,0CAA0C;AAChE,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAM;IACJc,YAAY;IACZC,aAAa;IACbC,eAAe;IACfC,iBAAiB;IACjBC,6BAA6B;IAC7BC,cAAc;IACdC;EACF,CAAC,GAAGjB,WAAW,CAACS,gBAAgB,CAAC;EAEjC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,IAAIiB,eAAe,EAAE;MACnBM,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC,EAAE,CAACN,eAAe,CAAC,CAAC;EAErB,MAAMO,mBAAmB,GAAGA,CAAA,KAAM;IAChCD,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,IAAIsB,YAAY,EAAE;MAChB,MAAMG,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC7BH,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMI,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;IAChCd,mBAAmB,CAACH,OAAO,CAAC;EAC9B,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA,CAACJ,SAAS;MACRS,OAAO,EAAGA,OAAS;MACnBC,UAAU,EAAGA,UAAY;MACzBgB,mBAAmB,EAAGA,mBAAqB;MAC3CR,cAAc,EAAGA,cAAgB;MACjCC,sBAAsB,EAAGA;IAAwB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACF3B,OAAA,CAACV,SAAS;MAACsC,EAAE,EAAG;QAAEC,SAAS,EAAE;MAAM,CAAG;MAAAN,QAAA,gBACpCvB,OAAA,CAACX,GAAG;QACFuC,EAAE,EAAG;UACHE,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBC,UAAU,EAAE;QACd,CAAG;QAAAT,QAAA,gBAEHvB,OAAA,CAACR,UAAU;UAACyC,OAAO,EAAC,IAAI;UAACC,KAAK,EAAC,QAAQ;UAACC,YAAY;UAAAZ,QAAA,EAAC;QAErD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb3B,OAAA,CAACR,UAAU;UAACyC,OAAO,EAAC,OAAO;UAACC,KAAK,EAAC,QAAQ;UAACC,YAAY;UAAAZ,QAAA,GAAC,yBAC/B,EAAE,GAAG,eAC5BvB,OAAA,CAACX,GAAG;YAAC+C,SAAS,EAAC,MAAM;YAACR,EAAE,EAAG;cAAES,UAAU,EAAE;YAAO,CAAG;YAAAd,QAAA,EAC/CV,6BAA6B,CAACJ,YAAY;UAAC;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACb3B,OAAA,CAACP,IAAI;UAAC6C,SAAS;UAACC,OAAO,EAAG,CAAG;UAACC,cAAc,EAAC,QAAQ;UAAAjB,QAAA,eACnDvB,OAAA,CAACP,IAAI;YAACgD,EAAE,EAAG,EAAI;YAAAlB,QAAA,eACbvB,OAAA,CAACH,aAAa;cACZ6C,QAAQ,EAAGjC,YAAc;cACzBkC,SAAS,EAAGjC,aAAe;cAC3BkC,aAAa,EAAGhC;YAAmB;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACN3B,OAAA,CAACT,QAAQ;QACPsD,IAAI,EAAG7B,YAAc;QACrB8B,gBAAgB,EAAG,IAAM;QACzBC,OAAO,EAAG7B,mBAAqB;QAC/B8B,OAAO,EAAGrC;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA,eACZ,CAAC;AAEP,CAAC;AAACvB,EAAA,CApFID,GAAG;EAAA,QAYHL,WAAW;AAAA;AAAAmD,EAAA,GAZX9C,GAAG;AAsFT,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}