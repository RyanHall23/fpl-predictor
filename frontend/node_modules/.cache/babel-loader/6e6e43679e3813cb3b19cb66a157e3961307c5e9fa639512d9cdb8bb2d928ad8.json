{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nconst useTeamData = entryId => {\n  _s();\n  const [mainTeamData, setMainTeamData] = useState([]);\n  const [benchTeamData, setBenchTeamData] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [isHighestPredictedTeam, setIsHighestPredictedTeam] = useState(false);\n  const fetchHighestPredictedTeam = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/bootstrap-static');\n      const result = await response.json();\n      const players = result.elements;\n\n      // Separate players by position\n      const goalkeepers = players.filter(player => player.element_type === 1);\n      const defenders = players.filter(player => player.element_type === 2);\n      const midfielders = players.filter(player => player.element_type === 3);\n      const forwards = players.filter(player => player.element_type === 4);\n\n      // Sort players by ep_next in descending order\n      goalkeepers.sort((a, b) => b.ep_next - a.ep_next);\n      defenders.sort((a, b) => b.ep_next - a.ep_next);\n      midfielders.sort((a, b) => b.ep_next - a.ep_next);\n      forwards.sort((a, b) => b.ep_next - a.ep_next);\n\n      // Select top players for each position\n      const squad = [...goalkeepers.slice(0, 2),\n      // 2 goalkeepers\n      ...defenders.slice(0, 5),\n      // 5 defenders\n      ...midfielders.slice(0, 5),\n      // 5 midfielders\n      ...forwards.slice(0, 3) // 3 forwards\n      ];\n\n      // Sort squad by ep_next in descending order\n      squad.sort((a, b) => b.ep_next - a.ep_next);\n      const initialTeam = [];\n      const initialBench = [];\n      const positionLimits = {\n        1: {\n          initial: 1,\n          total: 1\n        },\n        // goalkeeper\n        2: {\n          initial: 3,\n          total: 5\n        },\n        // defender\n        3: {\n          initial: 3,\n          total: 5\n        },\n        // midfielder\n        4: {\n          initial: 1,\n          total: 3\n        } // forward\n      };\n      const positionCounts = {\n        1: 0,\n        // goalkeeper\n        2: 0,\n        // defender\n        3: 0,\n        // midfielder\n        4: 0 // forward\n      };\n\n      // Add one goalkeeper to the initial team\n      if (goalkeepers.length > 0) {\n        initialTeam.push(goalkeepers[0]);\n        positionCounts[1]++;\n      }\n\n      // Add one goalkeeper to the bench team\n      if (goalkeepers.length > 1) {\n        initialBench.push(goalkeepers[1]);\n      }\n\n      // Add outfield players to the initial team and bench team\n      for (const player of squad) {\n        const position = player.element_type;\n        if (position !== 1) {\n          // Explicitly exclude goalkeepers\n          if (initialTeam.length < 11 && positionCounts[position] < positionLimits[position].initial) {\n            initialTeam.push(player);\n            positionCounts[position]++;\n          } else {\n            initialBench.push(player);\n          }\n        }\n      }\n\n      // Ensure the total count of players across both teams meets the requirements\n      while (initialTeam.length < 11) {\n        const player = initialBench.shift();\n        if (player.element_type !== 1) {\n          // Skip goalkeepers\n          initialTeam.push(player);\n          positionCounts[player.element_type]++;\n        }\n      }\n\n      // Ensure only three other players on the bench, excluding the goalkeeper\n      const outfieldBench = initialBench.filter(player => player.element_type !== 1);\n      initialBench.length = 0; // Clear the bench\n      initialBench.push(goalkeepers[1]); // Re-add the goalkeeper\n      initialBench.push(...outfieldBench.slice(0, 3)); // Add only the first 3 outfield players\n\n      const formatPlayer = player => ({\n        name: `${player.first_name} ${player.second_name}`,\n        team: player.team,\n        position: player.element_type,\n        predictedPoints: Math.round(player.ep_next),\n        code: player.code,\n        webName: player.web_name,\n        lastGwPoints: player.event_points,\n        inDreamteam: player.in_dreamteam,\n        totalPoints: player.total_points\n      });\n      setMainTeamData(initialTeam.map(formatPlayer));\n      setBenchTeamData(initialBench.map(formatPlayer));\n    } catch (error) {\n      console.error('Error fetching highest predicted team data:', error);\n    }\n  };\n  const fetchData = useCallback(async () => {\n    if (!entryId) return;\n    try {\n      const response = await fetch('http://localhost:5000/api/bootstrap-static');\n      const result = await response.json();\n      const CurrentEvent = result.events.find(event => event.is_current === true);\n      if (!CurrentEvent) {\n        throw new Error('No current event found.');\n      }\n      const eventId = CurrentEvent.id;\n      const fetchPlayerSquad = await fetch(`http://localhost:5000/api/entry/${entryId}/event/${eventId}/picks`);\n      const playerSquad = await fetchPlayerSquad.json();\n      const elements = playerSquad.picks.map(pick => pick.element);\n      const positions = playerSquad.picks.map(pick => pick.position);\n      const playersData = result.elements;\n      const mainTeam = [];\n      const bench = [];\n      playersData.forEach(player => {\n        const index = elements.indexOf(player.id);\n        if (index !== -1) {\n          const playerName = `${player.first_name} ${player.second_name}`;\n          const playerData = {\n            name: playerName,\n            team: player.team,\n            position: player.element_type,\n            predictedPoints: Math.round(player.ep_next),\n            code: player.code,\n            webName: player.web_name,\n            lastGwPoints: player.event_points,\n            inDreamteam: player.in_dreamteam,\n            totalPoints: player.total_points\n          };\n          if (positions[index] > 11) {\n            bench.push(playerData);\n          } else {\n            mainTeam.push(playerData);\n          }\n        }\n      });\n      setMainTeamData(mainTeam);\n      setBenchTeamData(bench);\n      console.log('Main Team:', mainTeam);\n      console.log('Bench:', bench);\n    } catch (error) {\n      console.error('Error fetching team data:', error);\n    }\n  }, [entryId]); // Memoize fetchData with useCallback\n\n  useEffect(() => {\n    const fetchInitialSquad = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/bootstrap-static');\n        const result = await response.json();\n        const CurrentEvent = result.events.find(event => event.is_current === true);\n        if (!CurrentEvent) {\n          throw new Error('No current event found.');\n        }\n        const players = result.elements;\n\n        // Separate players by position\n        const goalkeepers = players.filter(player => player.element_type === 1);\n        const defenders = players.filter(player => player.element_type === 2);\n        const midfielders = players.filter(player => player.element_type === 3);\n        const forwards = players.filter(player => player.element_type === 4);\n\n        // Sort players by ep_next in descending order\n        goalkeepers.sort((a, b) => b.ep_next - a.ep_next);\n        defenders.sort((a, b) => b.ep_next - a.ep_next);\n        midfielders.sort((a, b) => b.ep_next - a.ep_next);\n        forwards.sort((a, b) => b.ep_next - a.ep_next);\n\n        // Select top players for each position\n        const squad = [...goalkeepers.slice(0, 2),\n        // 2 goalkeepers\n        ...defenders.slice(0, 5),\n        // 5 defenders\n        ...midfielders.slice(0, 5),\n        // 5 midfielders\n        ...forwards.slice(0, 3) // 3 forwards\n        ];\n\n        // Sort squad by ep_next in descending order\n        squad.sort((a, b) => b.ep_next - a.ep_next);\n        const initialTeam = [];\n        const initialBench = [];\n        const positionLimits = {\n          1: {\n            initial: 1,\n            total: 1\n          },\n          // goalkeeper\n          2: {\n            initial: 3,\n            total: 5\n          },\n          // defender\n          3: {\n            initial: 3,\n            total: 5\n          },\n          // midfielder\n          4: {\n            initial: 1,\n            total: 3\n          } // forward\n        };\n        const positionCounts = {\n          1: 0,\n          // goalkeeper\n          2: 0,\n          // defender\n          3: 0,\n          // midfielder\n          4: 0 // forward\n        };\n\n        // Add one goalkeeper to the initial team\n        if (goalkeepers.length > 0) {\n          initialTeam.push(goalkeepers[0]);\n          positionCounts[1]++;\n        }\n\n        // Add one goalkeeper to the bench team\n        if (goalkeepers.length > 1) {\n          initialBench.push(goalkeepers[1]);\n          console.log('Goalkeeper added to bench:', goalkeepers[1]);\n        }\n\n        // Add outfield players to the initial team and bench team\n        for (const player of squad) {\n          const position = player.element_type;\n          if (position !== 1) {\n            // Explicitly exclude goalkeepers\n            if (initialTeam.length < 11 && positionCounts[position] < positionLimits[position].initial) {\n              initialTeam.push(player);\n              positionCounts[position]++;\n            } else {\n              initialBench.push(player);\n            }\n          }\n        }\n\n        // Ensure the total count of players across both teams meets the requirements\n        while (initialTeam.length < 11) {\n          const player = initialBench.shift();\n          if (player.element_type !== 1) {\n            // Skip goalkeepers\n            initialTeam.push(player);\n            positionCounts[player.element_type]++;\n          }\n        }\n\n        // Ensure only three other players on the bench, excluding the goalkeeper\n        const outfieldBench = initialBench.filter(player => player.element_type !== 1);\n        initialBench.length = 0; // Clear the bench\n        initialBench.push(goalkeepers[1]); // Re-add the goalkeeper\n        initialBench.push(...outfieldBench.slice(0, 3)); // Add only the first 3 outfield players\n\n        console.log('Initial Team:', initialTeam);\n        console.log('Bench Team:', initialBench);\n        const formatPlayer = player => ({\n          name: `${player.first_name} ${player.second_name}`,\n          team: player.team,\n          position: player.element_type,\n          predictedPoints: Math.round(player.ep_next),\n          code: player.code,\n          webName: player.web_name,\n          lastGwPoints: player.event_points,\n          inDreamteam: player.in_dreamteam,\n          totalPoints: player.total_points\n        });\n        setMainTeamData(initialTeam.map(formatPlayer));\n        setBenchTeamData(initialBench.map(formatPlayer));\n        console.log('Initial Team:', initialTeam);\n        console.log('Initial Bench:', initialBench);\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      }\n    };\n    fetchInitialSquad();\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Add fetchData to the dependency array\n\n  const handlePlayerClick = (player, teamType) => {\n    if (selectedPlayer === null) {\n      setSelectedPlayer({\n        player,\n        teamType\n      });\n    } else {\n      const swapResult = isValidSwap(selectedPlayer.player, player);\n      if (swapResult.valid) {\n        swapPlayers(selectedPlayer.player, player, selectedPlayer.teamType, teamType);\n        setSelectedPlayer(null);\n        setSnackbarMessage('');\n      } else {\n        setSnackbarMessage(swapResult.error);\n        setSelectedPlayer(null);\n      }\n    }\n  };\n  const swapPlayers = (player1, player2, teamType1, teamType2) => {\n    const fromTeam1 = teamType1 === 'bench' ? benchTeamData : mainTeamData;\n    const fromTeam2 = teamType2 === 'bench' ? benchTeamData : mainTeamData;\n    const index1 = fromTeam1.findIndex(p => p.name === player1.name);\n    const index2 = fromTeam2.findIndex(p => p.name === player2.name);\n    if (index1 !== -1 && index2 !== -1) {\n      [fromTeam1[index1], fromTeam2[index2]] = [fromTeam2[index2], fromTeam1[index1]];\n      setMainTeamData([...mainTeamData]);\n      setBenchTeamData([...benchTeamData]);\n    }\n  };\n  const isValidSwap = (player1, player2) => {\n    if (player1.position === 1 || player2.position === 1) {\n      if (player1.position !== player2.position) {\n        return {\n          valid: false,\n          error: 'Goalkeepers can only be swapped with other goalkeepers.'\n        };\n      }\n    }\n    const tempMainTeam = [...mainTeamData];\n    const tempBenchTeam = [...benchTeamData];\n    const index1 = tempMainTeam.findIndex(p => p.name === player1.name);\n    const index2 = tempBenchTeam.findIndex(p => p.name === player2.name);\n    if (index1 !== -1 && index2 !== -1) {\n      [tempMainTeam[index1], tempBenchTeam[index2]] = [tempBenchTeam[index2], tempMainTeam[index1]];\n    }\n    const positionCounts = tempMainTeam.reduce((counts, player) => {\n      counts[player.position] = (counts[player.position] || 0) + 1;\n      return counts;\n    }, {});\n    const defenders = positionCounts[2] || 0;\n    const midfielders = positionCounts[3] || 0;\n    const forwards = positionCounts[4] || 0;\n    if (defenders < 3) {\n      return {\n        valid: false,\n        error: 'The team must have at least 3 defenders.'\n      };\n    }\n    if (midfielders < 3) {\n      return {\n        valid: false,\n        error: 'The team must have at least 3 midfielders.'\n      };\n    }\n    if (forwards < 1) {\n      return {\n        valid: false,\n        error: 'The team must have at least 1 forward.'\n      };\n    }\n    return {\n      valid: true,\n      error: ''\n    };\n  };\n  const calculateTotalPredictedPoints = mainTeam => {\n    if (!mainTeam || mainTeam.length === 0) return 0;\n    const captain = mainTeam ? mainTeam.reduce((max, player) => parseFloat(player.predictedPoints) > parseFloat(max.predictedPoints) ? player : max, mainTeam[0]) : null;\n    const totalPoints = mainTeam ? mainTeam.reduce((total, player) => {\n      const points = parseFloat(player.predictedPoints) || 0;\n      return total + (player === captain ? points * 2 : points);\n    }, 0) : 0;\n    return totalPoints;\n  };\n  const toggleTeamView = () => {\n    setIsHighestPredictedTeam(prev => !prev);\n    if (!isHighestPredictedTeam) {\n      fetchHighestPredictedTeam();\n    } else {\n      // Re-fetch user's team data\n      fetchData();\n    }\n  };\n  return {\n    mainTeamData,\n    benchTeamData,\n    snackbarMessage,\n    handlePlayerClick,\n    calculateTotalPredictedPoints,\n    toggleTeamView,\n    isHighestPredictedTeam\n  };\n};\n_s(useTeamData, \"hrbhaHJM7EapYo6kz/16Be8U3s0=\");\nexport default useTeamData;","map":{"version":3,"names":["useEffect","useState","useCallback","useTeamData","entryId","_s","mainTeamData","setMainTeamData","benchTeamData","setBenchTeamData","selectedPlayer","setSelectedPlayer","snackbarMessage","setSnackbarMessage","isHighestPredictedTeam","setIsHighestPredictedTeam","fetchHighestPredictedTeam","response","fetch","result","json","players","elements","goalkeepers","filter","player","element_type","defenders","midfielders","forwards","sort","a","b","ep_next","squad","slice","initialTeam","initialBench","positionLimits","initial","total","positionCounts","length","push","position","shift","outfieldBench","formatPlayer","name","first_name","second_name","team","predictedPoints","Math","round","code","webName","web_name","lastGwPoints","event_points","inDreamteam","in_dreamteam","totalPoints","total_points","map","error","console","fetchData","CurrentEvent","events","find","event","is_current","Error","eventId","id","fetchPlayerSquad","playerSquad","picks","pick","element","positions","playersData","mainTeam","bench","forEach","index","indexOf","playerName","playerData","log","fetchInitialSquad","handlePlayerClick","teamType","swapResult","isValidSwap","valid","swapPlayers","player1","player2","teamType1","teamType2","fromTeam1","fromTeam2","index1","findIndex","p","index2","tempMainTeam","tempBenchTeam","reduce","counts","calculateTotalPredictedPoints","captain","max","parseFloat","points","toggleTeamView","prev"],"sources":["/home/rjhall/Development/fpl-predictor/frontend/src/hooks/useTeamData.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\n\nconst useTeamData = (entryId) => {\n  const [mainTeamData, setMainTeamData] = useState([]);\n  const [benchTeamData, setBenchTeamData] = useState([]);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [isHighestPredictedTeam, setIsHighestPredictedTeam] = useState(false);\n\n  const fetchHighestPredictedTeam = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/bootstrap-static');\n      const result = await response.json();\n\n      const players = result.elements;\n\n      // Separate players by position\n      const goalkeepers = players.filter((player) => player.element_type === 1);\n      const defenders = players.filter((player) => player.element_type === 2);\n      const midfielders = players.filter((player) => player.element_type === 3);\n      const forwards = players.filter((player) => player.element_type === 4);\n\n      // Sort players by ep_next in descending order\n      goalkeepers.sort((a, b) => b.ep_next - a.ep_next);\n      defenders.sort((a, b) => b.ep_next - a.ep_next);\n      midfielders.sort((a, b) => b.ep_next - a.ep_next);\n      forwards.sort((a, b) => b.ep_next - a.ep_next);\n\n      // Select top players for each position\n      const squad = [\n        ...goalkeepers.slice(0, 2), // 2 goalkeepers\n        ...defenders.slice(0, 5), // 5 defenders\n        ...midfielders.slice(0, 5), // 5 midfielders\n        ...forwards.slice(0, 3), // 3 forwards\n      ];\n\n      // Sort squad by ep_next in descending order\n      squad.sort((a, b) => b.ep_next - a.ep_next);\n\n      const initialTeam = [];\n      const initialBench = [];\n\n      const positionLimits = {\n        1: { initial: 1, total: 1 }, // goalkeeper\n        2: { initial: 3, total: 5 }, // defender\n        3: { initial: 3, total: 5 }, // midfielder\n        4: { initial: 1, total: 3 }, // forward\n      };\n\n      const positionCounts = {\n        1: 0, // goalkeeper\n        2: 0, // defender\n        3: 0, // midfielder\n        4: 0, // forward\n      };\n\n      // Add one goalkeeper to the initial team\n      if (goalkeepers.length > 0) {\n        initialTeam.push(goalkeepers[0]);\n        positionCounts[1]++;\n      }\n\n      // Add one goalkeeper to the bench team\n      if (goalkeepers.length > 1) {\n        initialBench.push(goalkeepers[1]);\n      }\n\n      // Add outfield players to the initial team and bench team\n      for (const player of squad) {\n        const position = player.element_type;\n        if (position !== 1) {\n          // Explicitly exclude goalkeepers\n          if (\n            initialTeam.length < 11 &&\n            positionCounts[position] < positionLimits[position].initial\n          ) {\n            initialTeam.push(player);\n            positionCounts[position]++;\n          } else {\n            initialBench.push(player);\n          }\n        }\n      }\n\n      // Ensure the total count of players across both teams meets the requirements\n      while (initialTeam.length < 11) {\n        const player = initialBench.shift();\n        if (player.element_type !== 1) {\n          // Skip goalkeepers\n          initialTeam.push(player);\n          positionCounts[player.element_type]++;\n        }\n      }\n\n      // Ensure only three other players on the bench, excluding the goalkeeper\n      const outfieldBench = initialBench.filter(\n        (player) => player.element_type !== 1,\n      );\n      initialBench.length = 0; // Clear the bench\n      initialBench.push(goalkeepers[1]); // Re-add the goalkeeper\n      initialBench.push(...outfieldBench.slice(0, 3)); // Add only the first 3 outfield players\n\n      const formatPlayer = (player) => ({\n        name: `${player.first_name} ${player.second_name}`,\n        team: player.team,\n        position: player.element_type,\n        predictedPoints: Math.round(player.ep_next),\n        code: player.code,\n        webName: player.web_name,\n        lastGwPoints: player.event_points,\n        inDreamteam: player.in_dreamteam,\n        totalPoints: player.total_points,\n      });\n\n      setMainTeamData(initialTeam.map(formatPlayer));\n      setBenchTeamData(initialBench.map(formatPlayer));\n    } catch (error) {\n      console.error('Error fetching highest predicted team data:', error);\n    }\n  };\n\n  const fetchData = useCallback(async () => {\n    if (!entryId) return;\n\n    try {\n      const response = await fetch('http://localhost:5000/api/bootstrap-static');\n      const result = await response.json();\n\n      const CurrentEvent = result.events.find(\n        (event) => event.is_current === true,\n      );\n      if (!CurrentEvent) {\n        throw new Error('No current event found.');\n      }\n\n      const eventId = CurrentEvent.id;\n      const fetchPlayerSquad = await fetch(\n        `http://localhost:5000/api/entry/${entryId}/event/${eventId}/picks`,\n      );\n      const playerSquad = await fetchPlayerSquad.json();\n\n      const elements = playerSquad.picks.map((pick) => pick.element);\n      const positions = playerSquad.picks.map((pick) => pick.position);\n\n      const playersData = result.elements;\n      const mainTeam = [];\n      const bench = [];\n\n      playersData.forEach((player) => {\n        const index = elements.indexOf(player.id);\n        if (index !== -1) {\n          const playerName = `${player.first_name} ${player.second_name}`;\n          const playerData = {\n            name: playerName,\n            team: player.team,\n            position: player.element_type,\n            predictedPoints: Math.round(player.ep_next),\n            code: player.code,\n            webName: player.web_name,\n            lastGwPoints: player.event_points,\n            inDreamteam: player.in_dreamteam,\n            totalPoints: player.total_points,\n          };\n\n          if (positions[index] > 11) {\n            bench.push(playerData);\n          } else {\n            mainTeam.push(playerData);\n          }\n        }\n      });\n\n      setMainTeamData(mainTeam);\n      setBenchTeamData(bench);\n\n      console.log('Main Team:', mainTeam);\n      console.log('Bench:', bench);\n    } catch (error) {\n      console.error('Error fetching team data:', error);\n    }\n  }, [entryId]); // Memoize fetchData with useCallback\n\n  useEffect(() => {\n    const fetchInitialSquad = async () => {\n      try {\n        const response = await fetch(\n          'http://localhost:5000/api/bootstrap-static',\n        );\n        const result = await response.json();\n\n        const CurrentEvent = result.events.find(\n          (event) => event.is_current === true,\n        );\n        if (!CurrentEvent) {\n          throw new Error('No current event found.');\n        }\n\n        const players = result.elements;\n\n        // Separate players by position\n        const goalkeepers = players.filter(\n          (player) => player.element_type === 1,\n        );\n        const defenders = players.filter((player) => player.element_type === 2);\n        const midfielders = players.filter(\n          (player) => player.element_type === 3,\n        );\n        const forwards = players.filter((player) => player.element_type === 4);\n\n        // Sort players by ep_next in descending order\n        goalkeepers.sort((a, b) => b.ep_next - a.ep_next);\n        defenders.sort((a, b) => b.ep_next - a.ep_next);\n        midfielders.sort((a, b) => b.ep_next - a.ep_next);\n        forwards.sort((a, b) => b.ep_next - a.ep_next);\n\n        // Select top players for each position\n        const squad = [\n          ...goalkeepers.slice(0, 2), // 2 goalkeepers\n          ...defenders.slice(0, 5), // 5 defenders\n          ...midfielders.slice(0, 5), // 5 midfielders\n          ...forwards.slice(0, 3), // 3 forwards\n        ];\n\n        // Sort squad by ep_next in descending order\n        squad.sort((a, b) => b.ep_next - a.ep_next);\n\n        const initialTeam = [];\n        const initialBench = [];\n\n        const positionLimits = {\n          1: { initial: 1, total: 1 }, // goalkeeper\n          2: { initial: 3, total: 5 }, // defender\n          3: { initial: 3, total: 5 }, // midfielder\n          4: { initial: 1, total: 3 }, // forward\n        };\n\n        const positionCounts = {\n          1: 0, // goalkeeper\n          2: 0, // defender\n          3: 0, // midfielder\n          4: 0, // forward\n        };\n\n        // Add one goalkeeper to the initial team\n        if (goalkeepers.length > 0) {\n          initialTeam.push(goalkeepers[0]);\n          positionCounts[1]++;\n        }\n\n        // Add one goalkeeper to the bench team\n        if (goalkeepers.length > 1) {\n          initialBench.push(goalkeepers[1]);\n          console.log('Goalkeeper added to bench:', goalkeepers[1]);\n        }\n\n        // Add outfield players to the initial team and bench team\n        for (const player of squad) {\n          const position = player.element_type;\n          if (position !== 1) {\n            // Explicitly exclude goalkeepers\n            if (\n              initialTeam.length < 11 &&\n              positionCounts[position] < positionLimits[position].initial\n            ) {\n              initialTeam.push(player);\n              positionCounts[position]++;\n            } else {\n              initialBench.push(player);\n            }\n          }\n        }\n\n        // Ensure the total count of players across both teams meets the requirements\n        while (initialTeam.length < 11) {\n          const player = initialBench.shift();\n          if (player.element_type !== 1) {\n            // Skip goalkeepers\n            initialTeam.push(player);\n            positionCounts[player.element_type]++;\n          }\n        }\n\n        // Ensure only three other players on the bench, excluding the goalkeeper\n        const outfieldBench = initialBench.filter(\n          (player) => player.element_type !== 1,\n        );\n        initialBench.length = 0; // Clear the bench\n        initialBench.push(goalkeepers[1]); // Re-add the goalkeeper\n        initialBench.push(...outfieldBench.slice(0, 3)); // Add only the first 3 outfield players\n\n        console.log('Initial Team:', initialTeam);\n        console.log('Bench Team:', initialBench);\n\n        const formatPlayer = (player) => ({\n          name: `${player.first_name} ${player.second_name}`,\n          team: player.team,\n          position: player.element_type,\n          predictedPoints: Math.round(player.ep_next),\n          code: player.code,\n          webName: player.web_name,\n          lastGwPoints: player.event_points,\n          inDreamteam: player.in_dreamteam,\n          totalPoints: player.total_points,\n        });\n\n        setMainTeamData(initialTeam.map(formatPlayer));\n        setBenchTeamData(initialBench.map(formatPlayer));\n        console.log('Initial Team:', initialTeam);\n        console.log('Initial Bench:', initialBench);\n      } catch (error) {\n        console.error('Error fetching team data:', error);\n      }\n    };\n\n    fetchInitialSquad();\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Add fetchData to the dependency array\n\n  const handlePlayerClick = (player, teamType) => {\n    if (selectedPlayer === null) {\n      setSelectedPlayer({ player, teamType });\n    } else {\n      const swapResult = isValidSwap(selectedPlayer.player, player);\n\n      if (swapResult.valid) {\n        swapPlayers(\n          selectedPlayer.player,\n          player,\n          selectedPlayer.teamType,\n          teamType,\n        );\n        setSelectedPlayer(null);\n        setSnackbarMessage('');\n      } else {\n        setSnackbarMessage(swapResult.error);\n        setSelectedPlayer(null);\n      }\n    }\n  };\n\n  const swapPlayers = (player1, player2, teamType1, teamType2) => {\n    const fromTeam1 = teamType1 === 'bench' ? benchTeamData : mainTeamData;\n    const fromTeam2 = teamType2 === 'bench' ? benchTeamData : mainTeamData;\n\n    const index1 = fromTeam1.findIndex((p) => p.name === player1.name);\n    const index2 = fromTeam2.findIndex((p) => p.name === player2.name);\n\n    if (index1 !== -1 && index2 !== -1) {\n      [fromTeam1[index1], fromTeam2[index2]] = [\n        fromTeam2[index2],\n        fromTeam1[index1],\n      ];\n      setMainTeamData([...mainTeamData]);\n      setBenchTeamData([...benchTeamData]);\n    }\n  };\n\n  const isValidSwap = (player1, player2) => {\n    if (player1.position === 1 || player2.position === 1) {\n      if (player1.position !== player2.position) {\n        return {\n          valid: false,\n          error: 'Goalkeepers can only be swapped with other goalkeepers.',\n        };\n      }\n    }\n\n    const tempMainTeam = [...mainTeamData];\n    const tempBenchTeam = [...benchTeamData];\n\n    const index1 = tempMainTeam.findIndex((p) => p.name === player1.name);\n    const index2 = tempBenchTeam.findIndex((p) => p.name === player2.name);\n\n    if (index1 !== -1 && index2 !== -1) {\n      [tempMainTeam[index1], tempBenchTeam[index2]] = [\n        tempBenchTeam[index2],\n        tempMainTeam[index1],\n      ];\n    }\n\n    const positionCounts = tempMainTeam.reduce((counts, player) => {\n      counts[player.position] = (counts[player.position] || 0) + 1;\n      return counts;\n    }, {});\n\n    const defenders = positionCounts[2] || 0;\n    const midfielders = positionCounts[3] || 0;\n    const forwards = positionCounts[4] || 0;\n\n    if (defenders < 3) {\n      return {\n        valid: false,\n        error: 'The team must have at least 3 defenders.',\n      };\n    }\n    if (midfielders < 3) {\n      return {\n        valid: false,\n        error: 'The team must have at least 3 midfielders.',\n      };\n    }\n    if (forwards < 1) {\n      return { valid: false, error: 'The team must have at least 1 forward.' };\n    }\n\n    return { valid: true, error: '' };\n  };\n\n  const calculateTotalPredictedPoints = (mainTeam) => {\n    if (!mainTeam || mainTeam.length === 0) return 0;\n\n    const captain = mainTeam\n      ? mainTeam.reduce(\n        (max, player) =>\n          parseFloat(player.predictedPoints) > parseFloat(max.predictedPoints)\n            ? player\n            : max,\n        mainTeam[0],\n      )\n      : null;\n\n    const totalPoints = mainTeam\n      ? mainTeam.reduce((total, player) => {\n        const points = parseFloat(player.predictedPoints) || 0;\n        return total + (player === captain ? points * 2 : points);\n      }, 0)\n      : 0;\n\n    return totalPoints;\n  };\n\n  const toggleTeamView = () => {\n    setIsHighestPredictedTeam((prev) => !prev);\n    if (!isHighestPredictedTeam) {\n      fetchHighestPredictedTeam();\n    } else {\n      // Re-fetch user's team data\n      fetchData();\n    }\n  };\n\n  return {\n    mainTeamData,\n    benchTeamData,\n    snackbarMessage,\n    handlePlayerClick,\n    calculateTotalPredictedPoints,\n    toggleTeamView,\n    isHighestPredictedTeam,\n  };\n};\n\nexport default useTeamData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}